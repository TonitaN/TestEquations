
/*
('c h a g i a g c i j e a i b g d f i f i Bs g d c a b f c d b d g a j d a h h f g g b =
  c h a g i a g c i j e a i b g d f i f i b i c d j As c d b d g a j d a h h f g g b')*/
*$MST_FROM_ENTRY;

*$MATCHING ForRepeatedSpecialization ;

*$STRATEGY Applicative ;
/*
$ENTRY Go {
 = <Prout <Go e.1 >> ;
}
*/

***
/*
*  InputFormat: <Go e.41 >
*  OutputFormat: ==> e.0 
*/


$ENTRY Go {
 (('Bs -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As') ('As -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As') ('As -> d As') ('As -> empty') e.101) =  False
               ;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> a As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> f As') ('As -> empty')
 ) =  True;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> f As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> f As') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> a As') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As') ('As -> d As') ('As -> c As') e.101) =  False
               ;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As') ('As -> d As') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') ('As -> g As') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('Bs -> As Bs') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As') ('As -> empty') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As') ('As -> d As') ('As -> empty') e.101) =  False
               ;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> a As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> f As') ('As -> empty')
 ) =  True;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> f As') ('As -> empty') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As')
    ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') ('As -> f As') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> a As') ('As -> b As') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As')
    ('As -> g As') ('As -> d As') ('As -> c As') ('As -> a As') e.101
 ) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As') ('As -> d As') ('As -> c As') e.101) =  False
               ;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As') ('As -> d As') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') ('As -> g As') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') ('As -> Bs As') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') ('Bs -> j Bs') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') ('Bs -> d Bs') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') ('Bs -> c Bs') e.101) =  False;
 (('Bs -> b Bs') ('Bs -> i Bs') e.101) =  False;
 (('Bs -> b Bs') e.101) =  False;
 (e.101) =  False;
}

****************************** The End ************************************

