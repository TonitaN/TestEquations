
/*
('e b i i h f d d a c g j h f Es i a d Is f g c b e j h i j a h f i g e e h g g i f b d i =
  e b i i h f d d a c g j h f Es i a d a a i e i g f g c b e j h i j a h f i g e e h g g i f b d i')
*/
*$MST_FROM_ENTRY;

*$MATCHING ForRepeatedSpecialization ;

*$STRATEGY Applicative ;
/*
$ENTRY Go {
 = <Prout <Go e.1 >> ;
}
*/

***
/*
*  InputFormat: <Go e.41 >
*  OutputFormat: ==> e.0 
*/


$ENTRY Go {
 (('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') ('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') ('Is -> i Is') ('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') ('Is -> i Is') ('Is -> g Is') ('Is -> empty')) =  True;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') ('Is -> i Is') ('Is -> g Is') ('Is -> empty') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') ('Is -> i Is') ('Is -> g Is') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') ('Is -> i Is') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') ('Is -> e Is') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') ('Is -> i Is') e.101) =  False;
 (('Is -> a Is') ('Is -> a Is') e.101) =  False;
 (('Is -> a Is') e.101) =  False;
 (e.101) =  False;
}

****************************** The End ************************************

