
/*
('f e e f d As g f e a c e e b a d c e f d b d d f g d b g c As As d d f c e c b a a b a c g d a d e c e a e a b f b b As f e b e f f a d b f f d g c f g b g d a e d g c c e d c b d g a c c b d f d e f a b a d f =
  f e e f d e g g f e a c e e b a d c e f d b d d f g d b g c e g As d d f c e c b a a b a c g d a d e c e a e a b f b b e g f e b e f f a d b f f d g c f g b g d a e d g c c e d c b d g a c c b d f d e f a b a d f')
*/
*$MST_FROM_ENTRY;

*$MATCHING ForRepeatedSpecialization ;

*$STRATEGY Applicative ;
/*
$ENTRY Go {
 = <Prout <Go e.1 >> ;
}
*/

***
/*
*  InputFormat: <Go e.41 >
*  OutputFormat: ==> e.0 
*/


$ENTRY Go {
 (('As -> empty') e.101) =  False;
 (('As -> e As') ('As -> empty') e.101) =  False;
 (('As -> e As') ('As -> g As') ('As -> empty')) =  True;
 (('As -> e As') ('As -> g As') ('As -> empty') e.101) =  False;
 (('As -> e As') ('As -> g As') ('As -> g As') e.101) =  False;
 (('As -> e As') ('As -> g As') e.101) =  False;
 (('As -> e As') e.101) =  False;
 (e.101) =  False;
}

****************************** The End ************************************

