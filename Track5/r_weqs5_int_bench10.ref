
*$MST_FROM_ENTRY;

*$MATCHING ForRepeatedSpecialization ;

*$STRATEGY Applicative ;
/*
$ENTRY Go {
 = <Prout <Go e.1 >> ;
}
*/

***
/*
*  InputFormat: <Go e.41 >
*  OutputFormat: ==> e.0 
*/


$ENTRY Go {
 (('As -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> empty') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> empty') e.101) =  False
               ;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs')
    ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs')
    ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs')
    ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs')
    ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs')
    ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs')
    ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs')
    ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> c Fs') ('Fs -> empty')
 ) =  True;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> f Fs')
    ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> c Fs') ('Fs -> empty') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs')
    ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> c Fs') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs')
    ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> a Fs') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs')
    ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> f Fs') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs')
    ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') ('Fs -> e Fs') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs')
    ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> e Fs') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs')
    ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> f Fs') ('Fs -> e Fs') e.101
 ) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs') ('Fs -> f Fs') e.101) =  False
               ;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') ('Fs -> e Fs') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') ('Fs -> c Fs') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') ('Fs -> e Fs') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') ('Fs -> f Fs') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') ('Fs -> a Fs') e.101) =  False;
 (('As -> c As') ('As -> empty') ('Fs -> f Fs') e.101) =  False;
 (('As -> c As') ('As -> empty') e.101) =  False;
 (('As -> c As') ('As -> f As') e.101) =  False;
 (('As -> c As') e.101) =  False;
 (e.101) =  False;
}

****************************** The End ************************************
